clear all; 
close all;

filename = "data_assignment_Rel-05.xlsx";
sheet = 1;

data = readmatrix(filename,'Sheet',sheet);
% data(any(isnan(data),2),:) = [];

% From data set

T_vals = [80, 130, 155] + 273;
Vg_vals = [1.3, 1.5, 1.7];

stress_times = rmmissing(data(:,1));
del_VT = rmmissing(data(:, 2:end)) * 1e-3; % Data is given in mV 
 
%% Parameters
q = 1.6e-19; 
Kb = 1.380649e-23;


%% A 

del_VT_func_IT = @(A_IT, gamma_IT, Ea_IT)...
    A_IT .* kron(exp(-q * Ea_IT./(Kb*T)) , Vg.^gamma_IT) .*  stress_times.^(1/6);

del_VT_func_HT = @(A_HT, gamma_HT, Ea_HT)...
    A_HT .* kron(exp(-q * Ea_HT./(Kb*T)) , Vg.^gamma_HT) .*  stress_times.^(0);


optim_func = @(params) norm(del_VT_func_IT(params(1),params(2), params(3)) + del_VT_func_HT(params(4),params(5), params(6)) - del_VT);

param_guess = [30 , 4.4, 0.1, 3 , 4.4, 0.05]';

param_low = [1e-4, 3.5, 0.06, 1e-4, 3.5, 0.06]';
param_upper = [1e4, 5.5, 0.14, 1e4, 5.5, 0.14]';

options = optimset('PlotFcns',@optimplotfval,'MaxFunEvals', 1e100, 'Maxiter', 1e100);

[param_vals, minval] = fmincon(optim_fun, param_guess, [],[],[],[],param_lbnd,param_ubnd,[],options);
fprintf ("Minimum value of cost function: %f \nParameters: \nA_it = %f \ngamma_it = %f \nEa_it = %f \n-----\n" + ...
    "A_ht = %f \ngamma_ht = %f \nEa_ht = %f \n",minval, sol(1), sol(2), sol(3), sol(4), sol(5), sol(6));


disp("Fit Parameters found: ");
A_avg
gamma_avg 
Ea_avg
n_avg

%% Plotting

data_fitted = del_VT_func(A_avg, Vg_vals, gamma_avg, Ea_avg, T_vals, n_avg, stress_times);

figure;

Vg_vals = [Vg_vals Vg_vals];
for i = 1:16
    Vg = Vg_vals(4 + mod(i, 4));
    if i <= 4
        T  = T_vals(1);
    elseif i > 4 && i <= 8
        T  = T_vals(2);
    elseif i > 8 && i <= 12
        T  = T_vals(3);
    else
        T  = T_vals(4);
    end

    color = [0.1 * randi([0,10]), 0.2 * randi([0,5]), 0.1 * randi([0,10])];
    not_nan_idx = ~isnan(del_VT(:,i));
    scatter(stress_times(not_nan_idx), del_VT(not_nan_idx,i),[], color, 'filled','DisplayName', '');
    hold on;
    grid on;
    set(gca,'xscale','log'); 
    set(gca,'yscale','log');
    plot(stress_times, data_fitted(:,i), '-','Color', color, 'DisplayName',...
        "Fitted Data - V_g = " + Vg + ", Temp (in C): " + (T - 273));
    legend('-DynamicLegend', 'location', 'best','FontSize',7);
end   

xlabel('Stress time(s)', 'interpreter', 'latex');
ylabel("$\Delta V_{IT}(V)$",  'interpreter', 'latex');
title("$\Delta V_{IT}$ vs Stress time (Stress data) : Slope = " + n_avg,  'interpreter', 'latex');
xlim padded;


